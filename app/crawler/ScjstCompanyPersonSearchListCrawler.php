<?php
/**
 * Created by PhpStorm.
 * User: wangyibo
 * Date: 2016-11-19
 * Time: 20:56
 */

namespace BuildInfo\crawler;

use RedisClient\RedisClient;
use RedisClient\ClientFactory;

class ScjstCompanyPersonSearchListCrawler extends BaseCrawler
{
    public $postData = [];
    public $bodyQuery;
    protected $limit = 1;
    private static $mongoInstance;

    private $companyCollection;
    private $scjstPersonCollection;
    public $useproxy = true;

    function __construct($urlRaw)
    {
        $this->redis = ClientFactory::create([
            'server' => 'tcp://127.0.0.1:6379', // or 'unix:///tmp/redis.sock'
            'timeout' => 2
        ]);
        $this->page = $this->redis->get(__CLASS__);
        if (empty($this->page)) {
            $this->redis->set(__CLASS__, 0);
            $this->page = $this->redis->get(__CLASS__);
        }
        parent::__construct($urlRaw);
        $this->companyCollection = $this->mongoConnection->build_info1->company;
        $this->scjstPersonCollection = $this->mongoConnection->build_info1->scjst_person;
    }

    function getContentAndSaveToBody($url)
    {
        $this->body = $this->doRequest($url, $this->postData);
//        print_r($this->postData);
        return $this->body;
    }

    function doRequest($url = '', $postData = [])
    {
        return parent::doRequest($url, $postData); // TODO: Change the autogenerated stub
    }

    function saveCompany($compName)
    {
//        $compName = '四川尧顺建设集团有限公司';
        while (((int)date('G')) < 3 && ((int)date('G')) >= 1) {
            sleep(2);
            echo 'time counter:' . (date('h:i:s')) . "\n";
        }
        $this->postData = null;
        $page = 1;
        $this->nextChildPage($compName, $page);
//        print_r($this->postData);exit;
        do {
            $url = $this->urlRaw;
            $this->tooManyNot200 = false;
            $this->getContentAndSaveToBody($url);
            if (empty($this->body) || $this->tooManyNot200) {
                return -1;
            }
            $bq = \QueryPath::withHTML5($this->body);
            if ($bq->find('input#txtCode')->length > 0) {//遇到验证码了
                echo "gotCheckCode!\n";
                sleep(5);
                $page--;
                continue;
            }
            $this->bodyQuery = $bq;
            $this->saveItem($compName);
            echo "finish child page:$page\n";
        } while ($this->nextChildPage($compName, ++$page));
//        exit;
    }

    function nextChildPage($compName, $page)
    {
        if ($page < 2) {
            $hidden = [];
            $hidden['__VIEWSTATE'] = '';
            $hidden['__EVENTTARGET'] = '';
            $hidden['__EVENTARGUMENT'] = '';
            $hidden['__EVENTVALIDATION'] = 'LLA7dIMPMRsgLObuUvniONZPmiNnx8nXGciXyPco5umu/E7v1xd3G0xzlVyFig5B3kONubOlsbC5Vo+QSMW7xH1wbNfo+3qJQ8cEtcfSHLgjoOvXAoWegsGoFPGHxRS6pXLBq1lMDoavbZahEmAc/NYtB2qzp/QkrX90gdRAwfJmRRnQ2LO60fi1umxEzye/';
            $hidden['ctl00$mainContent$txt_rymc'] = '';
            $hidden['ctl00$mainContent$txt_entname'] = $compName;
            $hidden['ctl00$mainContent$txt_zch'] = '';
            $hidden['ctl00$mainContent$Button1'] = '';
            $hidden['UBottom1:dg1'] = '';
            $hidden['UBottom1:dg2'] = '';
            $hidden['UBottom1:dg3'] = '';
            $hidden['UBottom1:dg4'] = '';
            $hidden['UBottom1:dg5'] = '';
            $hidden['UBottom1:dg6'] = '';
            $this->postData = $hidden;
            return true;
        }
        $paginator = $this->bodyQuery->find('.paginator')->eq(0);
        echo $this->bodyQuery->find('.paginator-custom-data')->eq(0)->text() . "\n";
        $as = $paginator->find('a');
        foreach ($as as $a) {
            $text = trim($a->text());
//            print_r($text);
            if (strcmp($text, '下页') === 0) {
                $disabled = trim($a->attr('disabled'));
                if (!empty($disabled) && $disabled == "true") {
                    return false;
                } else {
                    break;
                }
            }
        }

        $hidden = [];
        $hidden['__VIEWSTATE'] = $this->bodyQuery->find('#__VIEWSTATE')->attr('value');
        $hidden['__EVENTTARGET'] = 'ctl00$mainContent$gvBiddingResultPager';
        $hidden['__EVENTARGUMENT'] = $page;
        $hidden['__EVENTVALIDATION'] = $this->bodyQuery->find('#__EVENTVALIDATION')->attr('value');
        $hidden['ctl00$mainContent$txt_rymc'] = '';
        $hidden['ctl00$mainContent$txt_entname'] = $compName;
        $hidden['ctl00$mainContent$txt_zch'] = '';
        $hidden['UBottom1:dg1'] = '';
        $hidden['UBottom1:dg2'] = '';
        $hidden['UBottom1:dg3'] = '';
        $hidden['UBottom1:dg4'] = '';
        $hidden['UBottom1:dg5'] = '';
        $hidden['UBottom1:dg6'] = '';
        $this->postData = $hidden;
        return true;
    }

    public function saveItem($compName)
    {
        $this->content = $this->bodyQuery->find('table.list');
        $trs = $this->content->find('tr');
//        print_r($this->body);exit;
        $results = [];
        $lines = 0;
        if ($trs->length < 2) {
            echo "no person {$compName}\n";
            $this->scjstPersonCollection->insertOne(['no_person' => true, 'compName' => $compName]);
            return true;
        }
        foreach ($trs as $tr) {
            $lines++;
            if ($lines == 1) {
                continue;
            }
            $person = [];
            $person['compName'] = trim($tr->find('td')->eq(3)->text());;
            $url = $tr->find('td')->eq(1)->find('a')->attr('href');
            $URi = new \Purl\Url($url);
            $arr = $URi->query->getData();
            $person['siteId'] = trim($arr['id']);
            $person['name'] = trim($tr->find('td')->eq(1)->text());
            $person['local'] = trim($tr->find('td')->eq(2)->text());
            $person['compName'] = trim($tr->find('td')->eq(3)->text());
            $person['certNumber'] = trim($tr->find('td')->eq(4)->text());
            $person['certMajor'] = $this->explodeMajor(trim($tr->find('td')->eq(5)->text()));
            $person['endTime'] = strtotime(trim($tr->find('td')->eq(6)->text()));
            $person['certName'] = trim($tr->find('td')->eq(7)->text());
//            $certClass = trim($tr->find('td')->eq(7)->text());
//            $certPair = $this->explainCert($certClass);
//            $person['certName'] = $certPair['name'];
//            $person['certLevel'] = $certPair['level'];
            if ($this->scjstPersonCollection->findOne(
                [
                    'siteId' => $person['siteId'],
                    'compName' => $person['compName'],
                    'certNumber' => $person['certNumber'],
                ])
            ) {
                echo "exist " . $person['certNumber'] . " {$compName}\n";
                continue;
            }
            $this->scjstPersonCollection->insertOne($person);
        }
        echo "meet lines:" . $lines . "\n";
//        exit;
        if (!empty($results)) {
            return true;
        }
        return false;
    }

    function explodeMajor($majorStr)
    {
        $majors = explode("、", $majorStr);
        foreach ($majors as &$major) {
            $major = trim($major);
        }
        return $majors;
    }

    function explainCert($name)
    {
        $cert = [];
        $name = trim($name);
        if (preg_match('/特级/', $name, $match)) {
            $level = 0;
            $name = str_replace($match[0], '', $name);
        } elseif (preg_match('/(一|壹)级/', $name, $match)) {
            $level = 1;
            $name = str_replace($match[0], '', $name);
        } elseif (preg_match('/(二|贰)级/', $name, $match)) {
            $level = 2;
            $name = str_replace($match[0], '', $name);
        } elseif (preg_match('/(三|叁)级/', $name, $match)) {
            $level = 3;
            $name = str_replace($match[0], '', $name);
        } elseif (preg_match('/不分等级/', $name, $match)) {
            $level = -1;
            $name = str_replace($match[0], '', $name);
        } else {
            $level = -2;
        }
        $cert['name'] = $name;
        $cert['level'] = $level;
        return $cert;
    }

    function hasNew()
    {
        // TODO:是否有新的内容
    }

    function requestNot200()
    {
        echo "too many not 200 catched!\n";
        $this->tooManyNot200 = true;
        return false;
    }

    function savePage()
    {
//        return $this->errorsCallback();//用于召回抓取出错的
        $companies = $this->companyCollection->find(['updateTime' => ['$gt' => 1482420000]], [
            'limit' => $this->limit,
            'sort' => ['_id' => 1],
            'skip' => $this->page * $this->limit
        ]);
        foreach ($companies as $company) {
            echo "-------------------------------------\n-----start company " . $company['compName'] . "\n";
            $res = $this->saveCompany($company['compName']);
            if ($res === -1) {
                $this->scjstPersonCollection->insertOne(['error' => 2, 'compName' => $company['compName']]);
                echo "clean postdata and restart this person\n";
            }
            echo "-----finish company " . $company['compName'] . "\n-------------------------------------\n";
        }
        return true;
    }

    function errorsCallback()
    {
        $companies = $this->scjstPersonCollection->find(['error' => true], [
            'limit' => $this->limit,
            'sort' => ['_id' => 1],
            'skip' => $this->page * $this->limit
        ]);
        foreach ($companies as $company) {
            $res = $this->saveCompany($company['compName']);
            if ($res === -1) {
                $this->scjstPersonCollection->insertOne(['error' => 2, 'compName' => $company['compName']]);
                echo "clean postdata and restart this person\n";
            }
        }
        return true;
    }

    function moveToNext()
    {
        if ($this->companyCollection->count() <= $this->limit * $this->page) {
            return false;
        }
        $this->page = $this->redis->incr(__CLASS__);
        return true;
    }

}