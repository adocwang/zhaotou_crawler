<?php
/**
 * Created by PhpStorm.
 * User: wangyibo
 * Date: 2016-11-19
 * Time: 20:56
 */

namespace BuildInfo\crawler;


class ScjstPeopleCrawler extends BaseCrawler
{
    public $postData = [];
    public $bodyQuery;
    private static $mongoInstance;
    private $compId;

    function __construct($compId)
    {
        $this->compId = $compId;
        $urlRaw = 'http://xmgk.scjst.gov.cn/QueryInfo/Ente/EnteCyry.aspx?arcode=51&qylx=101&id=' . $compId;
        parent::__construct($urlRaw);
    }

    function getContentAndSaveToBody($url)
    {
        $this->body = $this->doRequest($url, $this->postData);
        return $this->body;
    }

    function getDb()
    {
        if (empty(self::$mongoInstance)) {
            self::$mongoInstance = new \MongoDB\Client('mongodb://localhost:27017');
        }
        return self::$mongoInstance;
    }

    function doRequest($url = '', $postData = [])
    {
        return parent::doRequest($url, $postData); // TODO: Change the autogenerated stub
    }

    function hasNew()
    {
        // TODO:是否有新的内容
    }

    function savePeople($id)
    {
        $collectionPerson = $this->getDb()->build_info1->person;

        //判断这个人的ID是否最近才抓过
        $personInDb = $collectionPerson->findOne(['siteId' => $id]);
        if (!empty($personInDb)) {
            if ($personInDb->updateTime > (time() - 3600 * 27 * 7)) {
                $personInfo = $personInDb;
            }
        }
        if (empty($personInfo)) {
            $url = 'http://www.scjst.gov.cn:8081/QueryInfo/Person/PersonInfo.aspx?id=' . $id;
            $html = $this->doRequest($url);
            $dom = \QueryPath::withHTML5($html);
            $contentDom = $dom->find('table.list');
            $personInfo = $this->getBasicInfo($contentDom->eq(0));
            $personInfo['siteId'] = $id;
            $personInfo['updateTime'] = time();
            $personInfo['cert'] = $this->getCert($contentDom);
            $personInfo['certUpdateTime'] = time();
        }
        //只抓从属关系的模式
        try {
            $collectionCompany = $this->getDb()->build_info1->company;
            $collectionCompany->updateOne(
                ['siteId' => $this->compId],
                ['$push' => ['person' => $personInfo]]
            );
            $has = $collectionPerson->findOne(['siteId' => $id]);
            if (!$has) {
                $result = $collectionPerson->insertOne($personInfo);
            } else {
                $result = $collectionPerson->updateOne(
                    ['siteId' => $personInfo['siteId']],
                    ['$set' => $personInfo]
                );
            }
            if ($result) {
                return true;
            }
        } catch (\MongoDB\Driver\Exception\BulkWriteException $e) {
            return false;
        }
    }

    function trs2pair($trs)
    {
        $pairs = [];
        foreach ($trs as $tr) {
            $tds = $tr->find('td');
            if ($tds->length == 2 || $tds->length == 3) {
                $pairs[] = $this->chineseField2en($tds->eq(0)->text(), $tds->eq(1)->text());
            } elseif ($tds->length == 4 || $tds->length == 5) {
                $pairs[] = $this->chineseField2en($tds->eq(0)->text(), $tds->eq(1)->text());
                $pairs[] = $this->chineseField2en($tds->eq(2)->text(), $tds->eq(3)->text());
            } elseif ($tds->length == 6 || $tds->length == 7) {
                $pairs[] = $this->chineseField2en($tds->eq(0)->text(), $tds->eq(1)->text());
                $pairs[] = $this->chineseField2en($tds->eq(2)->text(), $tds->eq(3)->text());
            }
        }
        return $pairs;
    }

    function getBasicInfo($contentDom)
    {
        $trs = $contentDom->find("tr");
        $pairs = $this->trs2pair($trs);
        $basicInfo = [];
        foreach ($pairs as $pair) {
            if (!empty($pair['name']) || !empty($pair['value'])) {
                $basicInfo[($pair['name'])] = $pair['value'];
            }
        }
        return $basicInfo;
    }

    /**
     * 解析资质信息
     * @param $contentDom
     * @return array
     */
    function getCert($contentDom)
    {
        $zizhis = [];
        $tables = $contentDom->find('table#tb_jzsgzz');
        $zizhi = [];
        foreach ($tables as $table) {
            $trs = $table->find('tr');
            $pairs = $this->trs2pair($trs);
            foreach ($pairs as $pair) {
                //等级证书
                if (strcmp('certName', $pair['name']) === 0) {
                    $cert = $this->explainCert($pair['value']);
                    $zizhi['certName'] = $cert['name'];
                    $zizhi['certLevel'] = $cert['level'];
                    continue;
                }

                if (preg_match_all('/建安(A|B|C)/', $pair['value'], $match)) {
                    $zizhi['certName'] = '建安';
                    $zizhi['certLevel'] = $match[1][0];
                }

                if (!empty($pair['name']) || !empty($pair['value'])) {
                    $zizhi[($pair['name'])] = $pair['value'];
                }
            }
            if (!empty($zizhi)) {
                $zizhis[] = $zizhi;
                $zizhi = [];
            }
        }
        return $zizhis;
    }

    function chineseField2en($chineseName, $value)
    {
        $map = [
            '姓名' => 'name',
            '性别' => 'sex',
            '技术职称' => 'title',
            '最高学历' => 'education',
            '毕业院校' => 'school',
            '所学专业' => 'major',
            '证书类型' => 'certType',
            '专业' => 'certMajor',
            '注册专业' => 'certMajor',
            '证书级别' => 'certName',
            '等    级' => 'certName',
            '注册证书号' => 'certRegNumber',
            '证书号' => 'certRegNumber',
            '证书编号' => 'certNumber',
            '执业资格证书号' => 'jobCertNumber',
            '执业印章编号' => 'jobStampNumber',
            '初始注册时间' => 'startTime',
            '发证时间' => 'startTime',
            '有效期' => 'endTime',
            '有 效 期' => 'endTime',
            '所在单位' => 'company',
            '职务' => 'compTitle',
            '岗位' => 'job'
        ];
        $enName = $map[trim($chineseName)];
        $value = trim($value);
        switch ($enName) {
            case 'startTime':
                $value = $this->strGetTime($value, true);
                break;
            case 'endTime':
                $value = $this->strGetTime($value, false);
                break;
        }
        return ['name' => $enName, 'value' => $value];
    }

    function strGetTime($timeStr, $first = true)
    {
        if (preg_match_all('/\d{4}-\d{2}-\d{2}/', $timeStr, $match)) {
            if ($first) {
                return strtotime($match[0][0]);
            }
            return strtotime(end($match[0]));
        }
        return 0;
    }

    function explainCert($name)
    {
        $cert = [];
        $name = trim($name);
        if (preg_match('/特级/', $name, $match)) {
            $level = 0;
            $name = str_replace($match[0], '', $name);
        } elseif (preg_match('/(一|壹)级/', $name, $match)) {
            $level = 1;
            $name = str_replace($match[0], '', $name);
        } elseif (preg_match('/(二|贰)级/', $name, $match)) {
            $level = 2;
            $name = str_replace($match[0], '', $name);
        } elseif (preg_match('/(三|叁)级/', $name, $match)) {
            $level = 3;
            $name = str_replace($match[0], '', $name);
        } elseif (preg_match('/不分等级/', $name, $match)) {
            $level = -1;
            $name = str_replace($match[0], '', $name);
        } else {
            $level = -2;
        }
        $cert['name'] = $name;
        $cert['level'] = $level;
        return $cert;
    }

    function savePage()
    {
//        $this->savePeople('000B0650-76EC-4594-85D4-862DFDCEE8A9');
        $this->getContentAndSaveToBody($this->url);
        $this->bodyQuery = \QueryPath::withHTML5($this->body);
        $this->content = $this->bodyQuery->find('table.list')->eq(1);
        $trs = $this->content->find('tr');
        $lineNum = 0;
        foreach ($trs as $tr) {
            if (++$lineNum == 1) {
                continue;
            }
            $url = $tr->find('td')->eq(1)->find('a')->attr('href');
            $URi = new \Purl\Url($url);
            $arr = $URi->query->getData();
            $lines[] = $arr['id'];
        }
        $results = [];
        foreach ($lines as $line) {
            $results[] = $this->savePeople($line);
        }
        if (!empty($results)) {
            return true;
        }
        return false;
    }

    function moveToNext()
    {
        $pageContent = $this->bodyQuery->find('#mainContent_gvBiddingResultPager');
        $navigators = $pageContent->find('td.paginator')->find('a');
        $this->page = (int)trim($pageContent->find('.cpb')->text());
        foreach ($navigators as $navigator) {
            if (strcmp($navigator->text(), '下页') === 0) {
                if ($navigator->hasAttr('disabled')) {
                    return false;
                }
            }
        }
        $hiddens = [];
        $hiddens['__VIEWSTATE'] = $this->bodyQuery->find('#__VIEWSTATE')->attr('value');
        $hiddens['__EVENTTARGET'] = 'ctl00$mainContent$gvBiddingResultPager';
        $hiddens['__EVENTARGUMENT'] = $this->page + 1;
        $hiddens['__EVENTVALIDATION'] = $this->bodyQuery->find('#__EVENTVALIDATION')->attr('value');
        $hiddens['ctl00$mainContent$cxtj'] = $this->bodyQuery->find('#mainContent_cxtj')->attr('value');
//        print_r($hiddens);exit;
        $this->postData = $hiddens;
        return true;
    }
}