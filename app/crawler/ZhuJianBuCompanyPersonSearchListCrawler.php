<?php
/**
 * Created by PhpStorm.
 * User: wangyibo
 * Date: 2016-11-19
 * Time: 20:56
 */

namespace BuildInfo\crawler;

use RedisClient\RedisClient;
use RedisClient\ClientFactory;

class ZhuJianBuCompanyPersonSearchListCrawler extends BaseCrawler
{
    public $postData = [];
    public $bodyQuery;
    protected $limit = 1;
    private static $mongoInstance;

    private $companyCollection;
    private $jianZaoShiCollection;
    private $tuJianZaoJiaCollection;
    public $useproxy = false;

    function __construct($urlRaw)
    {
        $this->redis = ClientFactory::create([
            'server' => 'tcp://127.0.0.1:6379', // or 'unix:///tmp/redis.sock'
            'timeout' => 2
        ]);
        $this->page = $this->redis->get(__CLASS__);
        if (empty($this->page)) {
            $this->redis->set(__CLASS__, 0);
            $this->page = $this->redis->get(__CLASS__);
        }
        parent::__construct($urlRaw);
        $this->companyCollection = $this->mongoConnection->build_info1->company;
        $this->jianZaoShiCollection = $this->mongoConnection->build_info1->zhu_ce_jian_zao_shi;
        $this->tuJianZaoJiaCollection = $this->mongoConnection->build_info1->tu_jian_zao_jia;
        $this->zhujianbuPersonCollection = $this->mongoConnection->build_info1->zhu_jian_bu_person;
    }

    function getContentAndSaveToBody($url)
    {
        $this->body = $this->doRequest($url, $this->postData);
//        print_r($this->postData);
        return $this->body;
    }

    function doRequest($url = '', $postData = [])
    {
        return parent::doRequest($url, $postData); // TODO: Change the autogenerated stub
    }

    public function saveItem($compName, $jsbId)
    {
//        $compName = '四川尧顺建设集团有限公司';
        $jsbId=trim($jsbId);
        if(empty($jsbId)){
            return true;
        }
        $this->postData = $this->getPostData();
//        print_r($this->postData);exit;
        $this->url = 'http://jzsc.mohurd.gov.cn/dataservice/query/comp/regStaffList/' . $jsbId;
        $this->getContentAndSaveToBody($this->url);
        $this->bodyQuery = \QueryPath::withHTML5($this->body);
        $this->content = $this->bodyQuery->find('table.pro_table_box');
        $this->content = $this->content->find('tbody');
        $trs = $this->content->find('tr');
        $results = [];
        $lines = 0;
        foreach ($trs as $tr) {
            if ($tr->find('td')->length < 2) {
                echo "no person {$compName}\n";
//                continue;
            }
            $lines++;
            $person = [];
            $person['compName'] = $compName;
            $a = $tr->find('td')->eq(1)->find('a');
            $href = $a->attr('onclick');
            $pos = strrpos($href, '/');
            $person['id'] = substr($href, $pos + 1, -1);
            $person['name'] = trim($tr->find('td')->eq(1)->text());
            if (empty($person['name'])) {
                continue;
            }
            $person['id_card_number'] = trim($tr->find('td')->eq(2)->text());
            $certname = trim($tr->find('td')->eq(3)->text());
            $person['certNumber'] = trim($tr->find('td')->eq(4)->text());
            $majors = $this->explodeMajor(trim($tr->find('td')->eq(5)->html()));
            if ($this->zhujianbuPersonCollection->findOne(['name' => ($person['name']), 'certNumber' => ($person['certNumber'])])) {
                echo "exist " . $person['name'] . " {$compName}\n";
                continue;
            }
            foreach ($majors as $major) {
                $person['certName'] = $certname . trim($major);
//                print_r($person);
                $this->zhujianbuPersonCollection->insertOne($person);
            }
        }
        echo "meet lines:" . $lines . "\n";
//        exit;
        if (!empty($results)) {
            return true;
        }
        return false;
    }

    function explodeMajor($majorStr)
    {
        $majors = [];
        $majorStr = preg_replace('/<\/?td.*>/U', '', $majorStr);
        if (strpos($majorStr, '<br/>') > 0) {
            $majorStr = str_replace('<br/>', ',', $majorStr);
            $majors = explode(',', $majorStr);
        } else {
            $majors[] = $majorStr;
        }
        return $majors;
    }

    function explainCert($name)
    {
        $cert = [];
        $name = trim($name);
        if (preg_match('/特级/', $name, $match)) {
            $level = 0;
            $name = str_replace($match[0], '', $name);
        } elseif (preg_match('/(一|壹)级/', $name, $match)) {
            $level = 1;
            $name = str_replace($match[0], '', $name);
        } elseif (preg_match('/(二|贰)级/', $name, $match)) {
            $level = 2;
            $name = str_replace($match[0], '', $name);
        } elseif (preg_match('/(三|叁)级/', $name, $match)) {
            $level = 3;
            $name = str_replace($match[0], '', $name);
        } elseif (preg_match('/不分等级/', $name, $match)) {
            $level = -1;
            $name = str_replace($match[0], '', $name);
        } else {
            $level = -2;
        }
        $cert['name'] = $name;
        $cert['level'] = $level;
        return $cert;
    }

    function hasNew()
    {
        // TODO:是否有新的内容
    }

    function savePage()
    {
//        $this->saveItem("四川省中西南建筑工程有限公司", "001610110030010184");
        $companies = $this->companyCollection->find(['jsbSiteId' => ['$exists' => true]], [
            'limit' => $this->limit,
            'sort' => ['_id' => 1],
            'skip' => $this->page * $this->limit
        ]);
        foreach ($companies as $company) {
            $this->saveItem($company['compName'], $company['jsbSiteId']);
        }
        return true;
    }

    function moveToNext()
    {
        if ($this->companyCollection->count() <= $this->limit * $this->page) {
            return false;
        }
        $this->page = $this->redis->incr(__CLASS__);
        return true;
    }

    function getPostData()
    {
        $postData = [];
        $postData['$reload'] = '0';
        $postData['$pg'] = '1';
        $postData['$pgsz'] = '5000';
        return $postData;
    }

}