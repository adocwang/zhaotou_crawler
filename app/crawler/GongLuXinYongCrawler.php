<?php
/**
 * Created by PhpStorm.
 * User: wangyibo
 * Date: 2016-11-19
 * Time: 20:56
 */

namespace BuildInfo\crawler;

use RedisClient\RedisClient;
use RedisClient\ClientFactory;

class GongLuXinYongCrawler extends BaseCrawler
{
    public $bodyQuery;
    public $page = 1;
    public $timeout = 1000;
    public $useproxy = false;

    function __construct($urlRaw)
    {
        $this->redis = ClientFactory::create([
            'server' => 'tcp://127.0.0.1:6379', // or 'unix:///tmp/redis.sock'
            'timeout' => 2
        ]);
        $this->page = $this->redis->get(__CLASS__);
        if (empty($this->page) || $this->page == 0) {
            $this->redis->set(__CLASS__, 1);
            $this->page = $this->redis->get(__CLASS__);
        }
        parent::__construct($urlRaw);
    }

    function getContentAndSaveToBody($url)
    {
        $this->body = $this->doRequest($url);
        return $this->body;
    }

    function doRequest($url = '', $postData = [])
    {
        return parent::doRequest($url, $postData); // TODO: Change the autogenerated stub
    }

    function hasNew()
    {
        // TODO:是否有新的内容
    }

    function saveCompany($compInfo)
    {
//        print_r($compInfo);
//        exit;
//        $this->getEngineer($id);//for test
        $collection = $this->mongoConnection->build_info1->gong_lu_xin_yong;
        try {
            $has = $collection->findOne(['detailLink' => $compInfo['detailLink']]);
            if (!$has) {
                $result = $collection->insertOne($compInfo);
            } else {
                $result = $collection->updateOne(
                    ['detailLink' => $compInfo['detailLink']],
                    ['$set' => $compInfo]
                );
            }
            if ($result) {
                return true;
            }
        } catch (\MongoDB\Driver\Exception\BulkWriteException $e) {
            return false;
        }
    }

    function savePage()
    {
//        $this->saveCompany('7c6c6710-4ece-43c5-8013-5dc88dd4d273');// for test
        $this->getContentAndSaveToBody($this->url);
        $this->bodyQuery = \QueryPath::withHTML5($this->body);
        $this->content = $this->bodyQuery->find('#datagrid')->find('tr');
        $trs = $this->content->find('tr');
        $lineNum = 0;
        foreach ($trs as $tr) {
            if (in_array(++$lineNum, [1])) {
                continue;
            }
            if ($lineNum == $trs->length) {
                continue;
            }
            $company = [];
            $tds = $tr->find('td');
            $company['ogrizationCode'] = trim($tds->eq(1)->text());
            $company['compName'] = trim($tds->eq(2)->find('a')->text());
            $company['detailLink'] = trim($tds->eq(2)->find('a')->attr('href'));
            $company['year'] = trim($tds->eq(3)->text());
            $company['provinceCount'] = trim($tds->eq(4)->text());
            $company['level'] = trim($tds->eq(5)->text());
            $company['score'] = trim($tds->eq(6)->text());
            $compDetail = $this->saveCompany($company);
            $lines[] = $compDetail;
        }
        if (!empty($lines)) {
            return true;
        }
        return false;
    }

    function moveToNext()
    {
        $navigators = $this->bodyQuery->find('#SqlPager1')->find('a');

        foreach ($navigators as $navigator) {
            if (strcmp($navigator->text(), '下页') === 0) {
                if (empty($navigator->attr('href'))) {
                    return false;
                }
            }
        }
        $this->page = $this->redis->incr(__CLASS__);
        $this->url = str_replace('{page}', $this->page, $this->urlRaw);
        return true;
    }
}